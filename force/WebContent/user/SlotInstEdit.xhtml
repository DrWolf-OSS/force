<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:s="http://jboss.com/products/seam/taglib"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:a="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich" template="/layout/template.xhtml">

	<ui:define name="body">

		<a:form id="slotInst" styleClass="edit" onkeypress="dirty=true">
		<script type="text/javascript" src="/force/javascript/exitInterceptor.js"/>
			<rich:panel style="width:1124px">
				<f:facet name="header">#{slotDefHome.instance.name} : #{slotInstHome.managed ? 'Modifica' : 'Crea'} Busta #{slotInstHome.managed ? slotInstHome.id : ''}</f:facet>
				
				<ui:repeat var="message" value="#{slotInstEditBean.slotMessages}">
					<h:graphicImage value="/img/msgerror.png"
						rendered="#{message.type == 'ERROR'}" />
					<h:graphicImage value="/img/msgwarn.png"
						rendered="#{message.type == 'WARNING'}" />
					<h:outputText value="#{message.text}" />
					<br />
				</ui:repeat>

				<s:div id="embeddedProperties">
					<c:forEach var="dataInstance" items="#{slotInstEditBean.embeddedProperties}">
					<s:fragment rendered="#{dataInstance.active}">
					<s:decorate template="/layout/display.xhtml">
						<ui:define name="label">
							<h:outputText value="#{dataInstance.dataDefinition.label}" />
						</ui:define>
						<s:fragment rendered="#{not dataInstance.multiple}">
						<h:outputText value="#{dataInstance.stringValue}"
							rendered="#{dataInstance.dataDefinition.dataType == 'STRING'}"/>
						<h:outputText value="#{dataInstance.integerValue}"
							rendered="#{dataInstance.dataDefinition.dataType == 'INTEGER'}" />
						<h:outputText value="#{dataInstance.booleanValue ? 'SÃ¬' : 'No'}"
							rendered="#{dataInstance.dataDefinition.dataType == 'BOOLEAN'}" />
						<h:outputText value="#{dataInstance.dateValue}"
							rendered="#{dataInstance.dataDefinition.dataType == 'DATE'}">
							<s:convertDateTime type="date" dateStyle="short"
								pattern="dd/MM/yyyy" />
						</h:outputText>
						<s:span rendered="#{dataInstance.dataDefinition.dataType == 'LINK'}">
							<a href="#{dataInstance.linkValue}" target="blank">#{dataInstance.stringValue}</a>
						</s:span>
						</s:fragment>
						<s:fragment rendered="#{dataInstance.multiple}">
							<h:outputText value="#{dataInstance.value}" />
						</s:fragment>
					</s:decorate>
					</s:fragment>
					</c:forEach>
				</s:div>

				<s:div id="properties">
					<c:forEach var="dataInstance"  items="#{slotInstEditBean.propertyInsts}">
					<s:div id="p_#{dataInstance.propertyDef.id}" rendered="#{dataInstance.propertyDef.active}">
						<s:decorate template="/layout/edit.xhtml"						
								rendered="#{dataInstance.propertyDef.conditionalPropertyDef == null or 
										(dataInstance.propertyDef.conditionalPropertyDef != null 
										and slotInstEditBean.findPropertyInstByDefId(dataInstance.propertyDef.conditionalPropertyDef.id).value.equals(dataInstance.propertyDef.conditionalPropertyInst.value))}">
							<ui:define name="label">
								<h:outputText value="#{dataInstance.dataDefinition.label}" />
							</ui:define>
							
							<s:fragment rendered="#{not dataInstance.dataDefinition.multiple}">
							<!--  -->
							<h:inputText value="#{dataInstance.stringValue}" 
								rendered="#{dataInstance.dataDefinition.dataType == 'STRING' and dataInstance.dataDefinition.dictionaryValues == null}"
								required="#{dataInstance.dataDefinition.required}"
								disabled="#{not dataInstance.dataDefinition.editable}" />
							<h:inputText value="#{dataInstance.integerValue}"
								rendered="#{dataInstance.dataDefinition.dataType == 'INTEGER' and dataInstance.dataDefinition.dictionaryValues == null}"
								required="#{dataInstance.dataDefinition.required}"
								disabled="#{not dataInstance.dataDefinition.editable}" />
							<a:region>
							<h:selectBooleanCheckbox value="#{dataInstance.booleanValue}"
								rendered="#{dataInstance.dataDefinition.dataType == 'BOOLEAN'}"
								required="#{dataInstance.dataDefinition.required}"
								disabled="#{not dataInstance.dataDefinition.editable}">
								<a:support event="onchange" action="#{slotInstEditBean.cleanConditionedElements(dataInstance)}"
										reRender="#{not empty dataInstance.propertyDef.conditionedPropertyDefs ? slotInstEditBean.buildIdsToRerender(dataInstance.propertyDef).concat(',') : ''} collections"/>
							</h:selectBooleanCheckbox>
							</a:region>
							<rich:calendar id="subscriptionDate" mode="client"
								value="#{dataInstance.dateValue}" datePattern="dd/MM/yyyy"
								rendered="#{dataInstance.dataDefinition.dataType == 'DATE' and dataInstance.dataDefinition.dictionaryValues == null}"
								required="#{dataInstance.dataDefinition.required}"
								disabled="#{not dataInstance.dataDefinition.editable}" 
								onchanged="dirty=true"/>

							<a:region>
							<h:selectOneMenu value="#{dataInstance.stringValue}" required="#{dataInstance.dataDefinition.required}"
										rendered="#{dataInstance.dataDefinition.dataType == 'STRING' and dataInstance.dataDefinition.dictionaryValues != null}"
										valueChangeListener="#{valueChangeListener.listener}">
	                    		<s:selectItems value="#{dataInstance.dataDefinition.dictionaryValues}" 
												var="value" label="#{value}" noSelectionLabel="-- seleziona un valore --"/>
								<a:support event="onchange" action="#{slotInstEditBean.cleanConditionedElements(dataInstance)}" 
										oncomplete="dirty=true;"
										reRender="#{not empty dataInstance.propertyDef.conditionedPropertyDefs ? slotInstEditBean.buildIdsToRerender(dataInstance.propertyDef).concat(',') : ''} collections"/>
	             			</h:selectOneMenu>
	             			<h:selectOneMenu value="#{dataInstance.integerValue}" required="#{dataInstance.dataDefinition.required}"             						
	             						rendered="#{dataInstance.dataDefinition.dataType == 'INTEGER' and dataInstance.dataDefinition.dictionaryValues != null}"
	             						valueChangeListener="#{valueChangeListener.listener}">
	                    		<s:selectItems value="#{dataInstance.dataDefinition.dictionaryValues}" 
												var="value" label="#{value}" noSelectionLabel="-- seleziona un valore --"/>
								<a:support event="onchange" action="#{slotInstEditBean.cleanConditionedElements(dataInstance)}"
										oncomplete="dirty=true"
										reRender="#{not empty dataInstance.propertyDef.conditionedPropertyDefs ? slotInstEditBean.buildIdsToRerender(dataInstance.propertyDef).concat(',') : ''} collections"/>
	             			</h:selectOneMenu>
	             			<h:selectOneMenu value="#{dataInstance.dateValue}"  required="#{dataInstance.dataDefinition.required}"
	             						rendered="#{dataInstance.dataDefinition.dataType == 'DATE' and dataInstance.dataDefinition.dictionaryValues != null}"
	             						valueChangeListener="#{valueChangeListener.listener}">
	                    		<s:selectItems value="#{dataInstance.dataDefinition.dictionaryValues}" 
												var="value" label="#{value}" noSelectionLabel="-- seleziona un valore --"/>
								<s:convertDateTime type="date" dateStyle="short" pattern="dd/MM/yyyy" />
								<a:support event="onchange" action="#{slotInstEditBean.cleanConditionedElements(dataInstance)}"
										oncomplete="dirty=true"
										reRender="#{not empty dataInstance.propertyDef.conditionedPropertyDefs ? slotInstEditBean.buildIdsToRerender(dataInstance.propertyDef).concat(',') : ''} collections"/>
	             			</h:selectOneMenu>
	             			<!--  --></a:region>
	             		</s:fragment>
	             		
	             			
	             			<s:fragment rendered="#{dataInstance.dataDefinition.multiple}">
							<rich:pickList value="#{dataInstance.valuesAsList}"
										required="#{dataInstance.dataDefinition.required}"
										onlistchanged="dirty=true">
								<s:selectItems value="#{dataInstance.dataDefinition.dictionaryValues}" var="value" label="#{value}" />
							</rich:pickList>
							</s:fragment>
	             			
						</s:decorate>
					</s:div>
					</c:forEach>
				</s:div>
				
				<div style="clear: both"><span class="required">*</span>
				campi obbligatori</div>

				<s:div id="collections">
					<h:panelGrid columns="2">
						<c:forEach var="coll" items="#{slotInstEditBean.docInstCollections}">

						<s:fragment rendered="#{coll.docDefCollection.active}">	
						<s:decorate template="/layout/display.xhtml" 
								rendered="#{coll.docDefCollection.conditionalPropertyDef == null or 
										(coll.docDefCollection.conditionalPropertyDef != null and slotInstEditBean.findPropertyInstByDefId(coll.docDefCollection.conditionalPropertyDef.id).value.equals(coll.docDefCollection.conditionalPropertyInst.value))}">
							<ui:define name="label">
								<h:outputText value="#{coll.docDefCollection.name}" />
								<s:span styleClass="required" rendered="#{coll.docDefCollection.min ge 1}">*</s:span>
							</ui:define>
									
							<s:div id="primaryRegion_#{coll.docDefCollection.id}" 
								rendered="#{coll.docDefCollection.conditionalPropertyDef == null or 
										(coll.docDefCollection.conditionalPropertyDef != null and slotInstEditBean.findPropertyInstByDefId(coll.docDefCollection.conditionalPropertyDef.id).value.equals(coll.docDefCollection.conditionalPropertyInst.value))}">
								<rich:panel rendered="#{slotDefHome.instance.type != 'PRIMARY'}" styleClass="nestedPanel primaryRegionPanel">
									<f:facet name="header">
										<h:outputText value="Documenti di tipo #{coll.docDefCollection.docDef.name} disponibili nella Busta di Riferimento" />
									</f:facet>

									<a:repeat
										value="#{slotInstEditBean.primaryDocs[coll.docDefCollection.id]}"
										var="item">
										<s:div styleClass="fileItem">
										<rich:toolTip direction="top-left">
									 		<img src="/force/tn?id=#{item.document.id}&amp;name=imgpreview"/>
										</rich:toolTip>
										<ui:define name="label">
											<h:outputText value="Nome del file" />
										</ui:define>
										<h:graphicImage value="/img/mimetype/document-pdf.png" rendered="#{item.mimetype.contains('pdf')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-word.png" rendered="#{item.mimetype.contains('word')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-powerpoint.png" rendered="#{item.mimetype.contains('powerpoint')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-excel.png" rendered="#{item.mimetype.contains('excel')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-table.png" rendered="#{item.mimetype.contains('opendocument.spreadsheet')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-image.png" rendered="#{item.mimetype.contains('image')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-text.png" rendered="#{item.mimetype.contains('text') or item.mimetype.contains('rtf')}"
														styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document.png" 
														rendered="#{not item.mimetype.contains('pdf') and not item.mimetype.contains('word') and not item.mimetype.contains('powerpoint')
																	and not item.mimetype.contains('excel') and not item.mimetype.contains('opendocument.spreadsheet') and not item.mimetype.contains('image') 
																	and not item.mimetype.contains('text') and not item.mimetype.contains('rtf')}" 
														styleClass="fileIcon"/>
										<h:graphicImage value="/img/tick-small.png" rendered="#{item.document.hasAspect('P:dw:signed')}" style="margin-left:-6px" />
										<a href="/force/download/#{item.fileName}?ref=#{item.document.id}">
										<h:outputText value="#{item.fileName}" />
										</a>
										<a:region>
											<a:commandButton value=">>"
												id="addPrimaryDoc_#{coll.docDefCollection.id}"
												action="#{slotInstEditBean.addDocFromPrimary(coll.docDefCollection.id,item)}"
												reRender="infoPanel_#{coll.docDefCollection.id},primaryRegion_#{coll.docDefCollection.id}"
												disabled="#{slotInstEditBean.datas[coll.docDefCollection.id].size ge coll.docDefCollection.max}"
												onclick="dirty=true"/>
										</a:region>

										</s:div>
									</a:repeat>

								</rich:panel>
							</s:div>
						</s:decorate>
						</s:fragment>
						
						<s:fragment rendered="#{coll.docDefCollection.active}">
						<s:div id="infoPanel_#{coll.docDefCollection.id}"
							rendered="#{coll.docDefCollection.conditionalPropertyDef == null or 
										(coll.docDefCollection.conditionalPropertyDef != null and slotInstEditBean.findPropertyInstByDefId(coll.docDefCollection.conditionalPropertyDef.id).value.equals(coll.docDefCollection.conditionalPropertyInst.value))}">
							<ui:repeat var="message"
								value="#{slotInstEditBean.collectionsMessages[coll.docDefCollection.id]}">
								<h:graphicImage value="/img/msgerror.png"
									rendered="#{message.type == 'ERROR'}" />
								<h:graphicImage value="/img/msgwarn.png"
									rendered="#{message.type == 'WARNING'}" />
								<h:outputText value="#{message.text}" />
								<br />
							</ui:repeat>
							<rich:panel styleClass="nestedPanel infoPanel">
								<f:facet name="header">
									<h:outputText value="Informazioni sui documenti caricati" />
								</f:facet>
								<h:outputText value="Nessun documento caricato"
									rendered="#{slotInstEditBean.datas[coll.docDefCollection.id] == null or (empty slotInstEditBean.datas[coll.docDefCollection.id])}" />

								<a:repeat id="fileGrid_#{coll.docDefCollection.id}"								
									value="#{slotInstEditBean.datas[coll.docDefCollection.id]}"
									var="item">
									
									<s:div styleClass="fileItem">
			
									<ui:repeat var="message"
										value="#{slotInstEditBean.filesMessages[item.id]}">
										<h:graphicImage value="/img/msgerror.png"
											rendered="#{message.type == 'ERROR'}" />
										<h:graphicImage value="/img/msgwarn.png"
											rendered="#{message.type == 'WARNING'}" />
										<h:outputText value="#{message.text}" />
										<br />
									</ui:repeat>

									<s:decorate template="/layout/display.xhtml">
										<rich:toolTip direction="top-left">
									 		<img src="/force/tn?id=#{item.document.id}&amp;name=imgpreview"/>
										</rich:toolTip>
										<ui:define name="label">
											<h:outputText value="Nome del file" />
										</ui:define>
										<h:graphicImage value="/img/mimetype/document-pdf.png" rendered="#{item.mimetype.contains('pdf')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-word.png" rendered="#{item.mimetype.contains('word')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-powerpoint.png" rendered="#{item.mimetype.contains('powerpoint')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-excel.png" rendered="#{item.mimetype.contains('excel')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-table.png" rendered="#{item.mimetype.contains('opendocument.spreadsheet')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-image.png" rendered="#{item.mimetype.contains('image')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document-text.png" rendered="#{item.mimetype.contains('text') or item.mimetype.contains('rtf')}"
														styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/vise-drawer.png" rendered="#{item.mimetype.contains('zip')}" styleClass="fileIcon"/>
										<h:graphicImage value="/img/mimetype/document.png" 
														rendered="#{not item.mimetype.contains('pdf') and not item.mimetype.contains('word') and not item.mimetype.contains('powerpoint')
																	and not item.mimetype.contains('excel') and not item.mimetype.contains('opendocument.spreadsheet') and not item.mimetype.contains('image') 
																	and not item.mimetype.contains('text') and not item.mimetype.contains('rtf') and not item.mimetype.contains('zip')}" 
														styleClass="fileIcon"/>
										<h:graphicImage value="/img/tick-small.png" rendered="#{item.document.hasAspect('P:dw:signed')}" style="margin-left:-6px" />
										<a href="/force/download/#{item.fileName}?ref=#{item.document.id}">
										<h:outputText value="#{item.fileName}" />
										</a>
									</s:decorate>
									<s:decorate template="/layout/display.xhtml">
										<ui:define name="label">
											<h:outputText value="Firmato digitalmente" />
										</ui:define>
										<h:outputText value="#{item.document.hasAspect('P:dw:signed') ? 'SÃ¬' : 'No'}"/>
										<rich:toolTip mode="client" rendered="#{item.document.hasAspect('P:dw:signed')}">
											<s:span>
												<a:repeat var="sign" value="#{item.signatures}" rowKeyVar="key">										
													<s:decorate template="/layout/display.xhtml">
														<ui:define name="label">
															<h:outputText value="Authority" />
														</ui:define>
														<h:outputText value="#{sign.authority}" />
													</s:decorate>
													<s:decorate template="/layout/display.xhtml">
														<ui:define name="label">
															<h:outputText value="Firma" />
														</ui:define>
														<h:outputText value="#{sign.sign}" />
													</s:decorate>
													<s:decorate template="/layout/display.xhtml">
														<ui:define name="label">
															<h:outputText value="Codice Fiscale" />
														</ui:define>
														<h:outputText value="#{sign.cf}" />
													</s:decorate>
													<s:decorate template="/layout/display.xhtml">
														<ui:define name="label">
															<h:outputText value="Data di scadenza" />
														</ui:define>
														<h:outputText value="#{sign.expiry}" >
															<s:convertDateTime type="date" dateStyle="short" pattern="dd/MM/yyyy" />
														</h:outputText>
													</s:decorate>
													<div style="clear: both" />
													<rich:separator styleClass="tooltipSeparator" height="1" rendered="#{key ge 1}"/>
												</a:repeat>
											</s:span>
										</rich:toolTip>
									</s:decorate>

									<a:repeat var="dataInstance" value="#{item.documentProperties}">
										<s:decorate template="/layout/display.xhtml">
											<ui:define name="label">
												<h:outputText value="#{dataInstance.dataDefinition.label}" />
											</ui:define>
											<s:fragment rendered="#{not dataInstance.dataDefinition.multiple}">
											<h:outputText value="#{dataInstance.stringValue}"
												rendered="#{dataInstance.dataDefinition.dataType == 'STRING'}"/>
											<h:outputText value="#{dataInstance.integerValue}"
												rendered="#{dataInstance.dataDefinition.dataType == 'INTEGER'}" />
											<h:outputText value="#{dataInstance.booleanValue ? 'SÃ¬' : 'No'}"
												rendered="#{dataInstance.dataDefinition.dataType == 'BOOLEAN'}" />
											<h:outputText value="#{dataInstance.dateValue}"
												rendered="#{dataInstance.dataDefinition.dataType == 'DATE'}">
												<s:convertDateTime type="date" dateStyle="short"
													pattern="dd/MM/yyyy" />
											</h:outputText>
											</s:fragment>
											<s:fragment rendered="#{dataInstance.dataDefinition.multiple}">
											<h:outputText value="#{dataInstance.values.toString()}"/>
											</s:fragment>
										</s:decorate>
									</a:repeat>
																	
									<div style="clear: both" />
									<a:region>
										<a:commandButton value="Elimina"
											action="#{slotInstEditBean.remove(coll.docDefCollection.id, item)}"
											reRender="infoPanel_#{coll.docDefCollection.id},primaryRegion_#{coll.docDefCollection.id}" 
											onclick="dirty=true"/>
										<a:commandButton value="Modifica"
											action="#{slotInstEditBean.editItem(coll.docDefCollection.id, item)}" 
											reRender="editPanel" 
											oncomplete="#{rich:component('editPanel')}.show()"
											disabled="#{not item.editable}"/>
									</a:region>
								</s:div>
								</a:repeat>
								<div style="clear: both" />

								<a:region>
									<a:commandButton id="addNewFile_#{coll.docDefCollection.id}"
										value="Aggiungi un nuovo file"
										action="#{slotInstEditBean.setActiveCollectionId(coll.docDefCollection.id)}"
										onclick="#{rich:component('uploadPanel')}.show()"
										reRender="primaryRegion_#{coll.docDefCollection.id}"
										disabled="#{slotInstEditBean.datas[coll.docDefCollection.id].size ge coll.docDefCollection.max}" />
								</a:region>
							</rich:panel>
						</s:div>
						</s:fragment>

						</c:forEach>
					</h:panelGrid>
				</s:div>

				<div style="clear: both"><span class="required">*</span>
				campi obbligatori</div>

			</rich:panel>

			<div class="actionButtons">
			<h:commandButton id="save"
				value="Salva" action="#{slotInstEditBean.save()}"
				onclick="dirty = false;"
				rendered="#{slotInstHome.id == null}"
				styleClass="modal" />
			<h:commandButton id="update"
				value="Salva" action="#{slotInstEditBean.update()}"
				onclick="dirty = false;"
				rendered="#{slotInstHome.id != null}" 
				styleClass="modal"/>
			<h:commandButton id="delete"
				value="Elimina" action="#{slotInstHome.remove}" immediate="true"
				onclick="dirty = false;"
				rendered="#{slotInstHome.managed}" 
				styleClass="modal"/>
			<s:button id="cancelEdit"
				value="Annulla" propagation="end" view="/SlotInst.xhtml"
				rendered="#{slotInstHome.managed}" />
			<s:button id="cancelAdd"
				value="Annulla" propagation="end"
				view="/#{empty slotInstFrom ? 'SlotInstList' : slotInstFrom}.xhtml"
				rendered="#{!slotInstHome.managed}" />
			</div>
		</a:form>

			

		<rich:modalPanel id="uploadPanel" autosized="true">
			<f:facet name="header">
				<h:outputText value="Caricamento file" />
			</f:facet>
			<a:form onkeypress="dirty=true">
				<rich:fileUpload id="fileUpload"
					fileUploadListener="#{slotInstEditBean.listener}" acceptedTypes="*"
					noDuplicate="false" autoclear="false" immediateUpload="true"
					onuploadcomplete="#{rich:component('uploadPanel')}.hide()">
					<a:support event="onfileuploadcomplete"
						reRender="editPanel,uploadPanel"
						oncomplete="#{rich:component('editPanel')}.show()" />
				</rich:fileUpload>
			</a:form>
			<div style="clear: both" />
			<a:commandButton value="Annulla"
				onclick="#{rich:component('uploadPanel')}.hide()" />
		</rich:modalPanel>

		<rich:modalPanel id="editPanel" autosized="true" minWidth="550">
			<f:facet name="header">
				<h:outputText value="Finestra di modifica" />
			</f:facet>
			<a:form id="editPanelForm" onkeypress="dirty=true">

					<script type="text/javascript">
					var epfinvalid = false;
					</script>

				<s:decorate template="/layout/display.xhtml">
					<ui:define name="label">
						<h:outputText value="Nome del file" />
					</ui:define>
					<h:outputText value="#{slotInstEditBean.activeFileContainer.fileName}" />
				</s:decorate>

				<ui:repeat var="dataInstance"
					value="#{slotInstEditBean.activeFileContainer.documentProperties}">
					
					<s:decorate template="/layout/edit.xhtml">
					<ui:param name="prefix" value="epf" />
						<ui:define name="label">
							<h:outputText value="#{dataInstance.dataDefinition.label}" />
						</ui:define>
						<s:fragment rendered="#{not dataInstance.dataDefinition.multiple}">
						<h:inputText value="#{dataInstance.stringValue}"
							rendered="#{dataInstance.dataDefinition.dataType == 'STRING' and dataInstance.dataDefinition.dictionaryValues == null}"
							required="#{dataInstance.dataDefinition.required}"
							disabled="#{not dataInstance.dataDefinition.editable}" />
						<h:inputText value="#{dataInstance.integerValue}"
							rendered="#{dataInstance.dataDefinition.dataType== 'INTEGER' and dataInstance.dataDefinition.dictionaryValues == null}"
							required="#{dataInstance.dataDefinition.required}"
							disabled="#{not dataInstance.dataDefinition.editable}" />
						<h:selectBooleanCheckbox value="#{dataInstance.booleanValue}"
							rendered="#{dataInstance.dataDefinition.dataType == 'BOOLEAN'}"
							required="#{dataInstance.dataDefinition.required}"
							disabled="#{not dataInstance.dataDefinition.editable}" />
						<rich:calendar id="subscriptionDate" mode="client"
							value="#{dataInstance.dateValue}" datePattern="dd/MM/yyyy"
							rendered="#{dataInstance.dataDefinition.dataType == 'DATE' and dataInstance.dataDefinition.dictionaryValues == null}"
							required="#{dataInstance.dataDefinition.required}"
							disabled="#{not dataInstance.dataDefinition.editable}" 
							onchanged="dirty=true"/>
						
						<h:selectOneMenu value="#{dataInstance.stringValue}" required="#{dataInstance.dataDefinition.required}"
									rendered="#{dataInstance.dataDefinition.dataType == 'STRING' and dataInstance.dataDefinition.dictionaryValues != null}"
									onchange="dirty=true">
                    		<s:selectItems value="#{dataInstance.dataDefinition.dictionaryValues}" 
											var="value" label="#{value}" noSelectionLabel="-- seleziona un valore --"/>
             			</h:selectOneMenu>
             			<h:selectOneMenu value="#{dataInstance.integerValue}" required="#{dataInstance.dataDefinition.required}"
             						rendered="#{dataInstance.dataDefinition.dataType == 'INTEGER' and dataInstance.dataDefinition.dictionaryValues != null}" 
             						onchange="dirty=true">
                    		<s:selectItems value="#{dataInstance.dataDefinition.dictionaryValues}" 
											var="value" label="#{value}" noSelectionLabel="-- seleziona un valore --"/>
             			</h:selectOneMenu>
             			<h:selectOneMenu value="#{dataInstance.dateValue}"  required="#{dataInstance.dataDefinition.required}"
             						rendered="#{dataInstance.dataDefinition.dataType == 'DATE' and dataInstance.dataDefinition.dictionaryValues != null}"
             						onchange="dirty=true">
                    		<s:selectItems value="#{dataInstance.dataDefinition.dictionaryValues}" 
											var="value" label="#{value}" noSelectionLabel="-- seleziona un valore --"/>
							<s:convertDateTime type="date" dateStyle="short" pattern="dd/MM/yyyy" /> 
             			</h:selectOneMenu>
             			</s:fragment>
             			<s:fragment rendered="#{dataInstance.dataDefinition.multiple}">
             			<rich:pickList value="#{dataInstance.values}" required="#{dataInstance.dataDefinition.required}" onlistchanged="dirty=true">
							<s:selectItems value="#{dataInstance.dataDefinition.dictionaryValues}" var="value" label="#{value}" />
						</rich:pickList>
             			</s:fragment>
					</s:decorate>
				</ui:repeat>
				
				<div style="clear: both" />
				<a:commandButton value="Conferma"
					action="#{slotInstEditBean.addActiveItemToDatas}"
					reRender="editPanelForm, infoPanel_#{slotInstEditBean.activeCollectionId}, primaryRegion_#{slotInstEditBean.activeCollectionId}" 
					oncomplete="if(!epfinvalid){#{rich:component('editPanel')}.hide();}#{rich:component('waitPanel')}.hide();"
					onclick="#{rich:component('waitPanel')}.show();"/>
				<a:region>
				<a:commandButton value="Annulla" onclick="#{rich:component('editPanel')}.hide()"/>
				</a:region>
			</a:form>
		</rich:modalPanel>

	</ui:define>

</ui:composition>
